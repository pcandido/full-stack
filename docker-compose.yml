networks:
  reverse-proxy:
  monitor:
  prometheus-net:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.23.0.0/16
          ip_range: 172.23.5.0/24
          gateway: 172.23.5.254

volumes:
  elasticsearch-volume:
  grafana-volume:

services:
  ui:
    image: full-stack/ui
    container_name: ui
    build: ui
    volumes:
      - ./ui/config:/etc/nginx/conf.d
      - ./ui/static:/ui/static
      - ./ui/logs:/var/log/nginx
    ports:
      - 80:80

  app:
    image: full-stack/app
    container_name: app
    build: app
    volumes:
      - ./app/logs:/app/logs
    ports:
      - 8080:8080
    networks:
      - reverse-proxy

  nginx:
    image: full-stack/nginx
    container_name: nginx
    build: nginx
    volumes:
      - ./nginx/config:/etc/nginx/conf.d
      - ./nginx/logs:/var/log/nginx
    ports:
      - 8880:80
      - 8881:8881
      - 8882:8882
    networks:
      - reverse-proxy
      - monitor
    depends_on:
      - app

  elasticsearch:
    image: full-stack/elasticsearch
    container_name: elasticsearch
    build:
      context: elasticsearch
      args:
        ELK_VERSION: $ELK_VERSION
    volumes:
      - ./elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro
      - elasticsearch-volume:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
      - 9300:9300
    networks:
      - monitor

  kibana:
    image: full-stack/kibana
    container_name: kibana
    build:
      context: kibana
      args:
        ELK_VERSION: $ELK_VERSION
    volumes:
      - ./kibana/config/kibana.yml:/usr/share/kibana/config/kibana.yml:ro
    ports:
      - 5601:5601
    networks:
      - monitor
    depends_on:
      elasticsearch:
        condition: service_healthy

  logstash:
    image: full-stack/logstash
    container_name: logstash
    build:
      context: logstash
      args:
        ELK_VERSION: $ELK_VERSION
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
    volumes:
      - ./logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml:ro
      - ./logstash/pipeline:/usr/share/logstash/pipeline:ro
    ports:
      - 9600:9600
    expose:
      - 5044
    networks:
      - monitor
    depends_on:
      elasticsearch:
        condition: service_healthy

  filebeat:
    image: full-stack/filebeat
    container_name: filebeat
    build:
      context: filebeat
      args:
        ELK_VERSION: $ELK_VERSION
    entrypoint: "filebeat -e -strict.perms=false"
    volumes:
      - ./filebeat/config/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
      - ./nginx/logs:/var/log/nginx
      - ./app/logs:/var/log/app
      - ./ui/logs:/var/log/ui
    ports:
      - 5067:5067
    networks:
      - monitor
    depends_on:
      logstash:
        condition: service_healthy

  grafana:
    image: full-stack/grafana
    container_name: grafana
    build: grafana
    volumes:
      - grafana-volume:/var/lib/grafana
    ports:
      - 3000:3000
    networks:
      - monitor

  node_exporter:
    image: full-stack/node-exporter
    container_name: node_exporter
    build: node-exporter
    user: root
    command:
      - --path.rootfs=/host
    pid: host
    volumes:
      - /:/host:ro
    network_mode: host
    ports:
      - 9100:9100

  prometheus:
    image: full-stack/prometheus
    container_name: prometheus
    build: prometheus
    command:
      - --config.file=/etc/prometheus/prometheus.yml
    volumes:
      - ./prometheus/config/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    ports:
      - 9090:9090
    networks:
      - monitor
      - prometheus-net
    extra_hosts:
      - "host.docker.internal: 172.23.5.254"

  init:
    image: full-stack/init
    container_name: init
    build: init
    environment:
      KIBANA_HOST: kibana:5601
      GRAFANA_HOST: grafana:3000
    networks:
      - monitor
    depends_on:
      elasticsearch:
        condition: service_healthy
      kibana:
        condition: service_healthy
